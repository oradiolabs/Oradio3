name: Check Python with Pylint (PEP8)

on: 
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev python3-dbus python3-gi

    - name: Create venv with system packages
      run: |
        python3 -m venv --system-site-packages ~/.venv
        source ~/.venv/bin/activate
        python -m pip install --upgrade pip
        pip install pylint smbus2 rpi-lgpio concurrent_log_handler \
                    requests nmcli vcgencmd watchdog python-mpd2 \
                    pydantic fastapi JinJa2 uvicorn python-multipart
        pip install pyalsaaudio --use-pep517

    - name: Install Python dependencies for linting
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install smbus2 rpi-lgpio concurrent_log_handler requests \
                    nmcli vcgencmd watchdog python-mpd2 pydantic \
                    fastapi JinJa2 uvicorn python-multipart
        pip install pyalsaaudio --use-pep517

    - name: Run pylint inside venv
      # Disable immediate exit on error
      # Use .pylintrc 
      # Prevent MPDClient no-member errors, as they are false positives
      # Fail on fatal(1) + error(2) + warning(4) + usage(32), continue on refactor(8) and convention(16)
      run: |
        set +e     
        source ~/.venv/bin/activate
        pylint $(git ls-files '*.py') \
        --rcfile=.github/workflows/.pylintrc \
        --generated-members=self.client,mpd.client \
        --output=pylint_result.txt
        status=$?
        echo "Raw pylint exit code: $status"
        masked=$((status & 39))
        echo "Masked exit code (fatal, error, warning, usage): $masked"
        exit $masked
      shell: bash

    - name: Upload pylint result
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pylint_result.txt
        path: pylint_result.txt
